sources:
  - type: maven
    path: jdbc-kerberos-setup-test/pom.xml
    parentPom:
      groupId: "com.exasol"
      artifactId: "tableau-connector"
      version: "${revision}"
      relativePath: "../pom.xml"
    advertise: false
  - type: maven
    path: tableau-server-GUI-tests/pom.xml
    parentPom:
      groupId: "com.exasol"
      artifactId: "tableau-connector"
      version: "${revision}"
      relativePath: "../pom.xml"
  - type: maven
    path: pom.xml
  - type: npm
    path: javascript-test/package.json
    artifacts:
      - target/exasol_${version}.taco
      - target/tableau-exasol-connector-${version}.taco
version:
  fromSource: pom.xml
excludes:
  - regex: "(?s)E-PK-CORE-62: The project's README\\.md does not contain a valid badges block\\. Please add or replace the following badges.*"
  - "E-PK-CORE-17: Missing required file: '.github/workflows/ci-build-next-java.yml'"
build:
  workflows:
    - name: "ci-build.yml"
      stepCustomizations:
        - action: INSERT_AFTER
          stepId: setup-java
          content:
            id: setup-node
            uses: actions/setup-node@v4
            with:
              node-version: "22"
              cache: "npm"
              cache-dependency-path: "javascript-test/package-lock.json"

        - action: INSERT_AFTER
          stepId: setup-node
          content:
            name: Run JavaScript tests
            id: run-javascript-tests
            run: |
              cd javascript-test
              npm ci
              npm run test

        - action: INSERT_AFTER
          stepId: run-javascript-tests
          content:
            name: Build connectors
            id: build-connectors
            run: ./tools/package_connector.sh

        - action: INSERT_AFTER
          stepId: build-connectors
          content:
            name: Retrieve code signing certificate
            id: retrieve-code-signing-certificate
            run: echo $CODE_SIGNING_CERTIFICATE_BASE64 | base64 --decode > target/cert.p12
            env:
              CODE_SIGNING_CERTIFICATE_BASE64: ${{ secrets.CODE_SIGNING_CERTIFICATE_BASE64 }}

        - action: INSERT_AFTER
          stepId: retrieve-code-signing-certificate
          content:
            name: Retrieve code signing certificate chain
            id: retrieve-code-signing-certificate-chain
            run: echo $CODE_SIGNING_CERTIFICATE_CHAIN_BASE64 | base64 --decode > target/cert_chain.p7b
            env:
              CODE_SIGNING_CERTIFICATE_CHAIN_BASE64: ${{ secrets.CODE_SIGNING_CERTIFICATE_CHAIN_BASE64 }}

        - action: INSERT_AFTER
          stepId: retrieve-code-signing-certificate-chain
          content:
            name: Sign connectors
            id: sign-connectors
            run: ./tools/sign_connector.sh target/cert.p12 target/cert_chain.p7b
            env:
              CODE_SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.CODE_SIGNING_CERTIFICATE_PASSWORD }}

        - action: REPLACE
          stepId: build-pk-verify
          content:
            name: Project Keeper Verify
            id: build-pk-verify
            run: mvn --batch-mode -DtrimStackTrace=false --projects . test com.exasol:project-keeper-maven-plugin:verify

        - action: INSERT_AFTER
          stepId: build-pk-verify
          content:
            name: Generate dummy error code report
            id: generate-dummy-error-code-report
            run: echo '{"$schema":"https://schemas.exasol.com/error_code_report-1.0.0.json","errorCodes":[]}' > target/error_code_report.json

    - name: "release.yml"
      stepCustomizations:
        - action: INSERT_AFTER
          stepId: setup-jdks
          content:
            id: setup-node
            uses: actions/setup-node@v4
            with:
              node-version: "22"
              cache: "npm"
              cache-dependency-path: "javascript-test/package-lock.json"

        - action: REPLACE
          stepId: build
          content:
            name: Build connectors
            id: build
            run: ./tools/package_connector.sh

        - action: INSERT_AFTER
          stepId: build
          content:
            name: Retrieve code signing certificate
            id: retrieve-code-signing-certificate
            run: echo $CODE_SIGNING_CERTIFICATE_BASE64 | base64 --decode > target/cert.p12
            env:
              CODE_SIGNING_CERTIFICATE_BASE64: ${{ secrets.CODE_SIGNING_CERTIFICATE_BASE64 }}

        - action: INSERT_AFTER
          stepId: retrieve-code-signing-certificate
          content:
            name: Retrieve code signing certificate chain
            id: retrieve-code-signing-certificate-chain
            run: echo $CODE_SIGNING_CERTIFICATE_CHAIN_BASE64 | base64 --decode > target/cert_chain.p7b
            env:
              CODE_SIGNING_CERTIFICATE_CHAIN_BASE64: ${{ secrets.CODE_SIGNING_CERTIFICATE_CHAIN_BASE64 }}

        - action: INSERT_AFTER
          stepId: retrieve-code-signing-certificate-chain
          content:
            name: Sign connectors
            id: sign-connectors
            run: ./tools/sign_connector.sh target/cert.p12 target/cert_chain.p7b
            env:
              CODE_SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.CODE_SIGNING_CERTIFICATE_PASSWORD }}

        - action: INSERT_AFTER
          stepId: build
          content:
            name: Generate dummy error code report
            id: generate-dummy-error-code-report
            run: echo '{"$schema":"https://schemas.exasol.com/error_code_report-1.0.0.json","errorCodes":[]}' > target/error_code_report.json
